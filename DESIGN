Programming a Scheduler for the Minix kernel: Design Document 
Alex Lynchosky <alynchos>
Steven Morad <smorad>
CMPS 111, Winter 2014

Purpose

The purpose of this project is to design a scheduler to run processes in MINIX.


Available Resources

We were given access to the source code of the minix kernel.

Design:

We will modify each of the following functions in the ways described. We will use multiple #ifdefs 
in order to let the user decide which type of lottery scheduling to use (basic, dynamic, experimental).

config.h:
define two queues for winners and losers. These queues will replace USER_Q

schedproc.h
add a ticket field to the process struct

schedule.c
do_noquantum:
This function will subtract a ticket when the process runs out of quantum

do_start_scheduling:
this will be changed to assign a number of tickets to the process

do_stop_scheduling:
this will be changed to remove the number of tickets from the pool that the exiting process held

do_nice:
this will be edited change the number of tickets the process holds

balance_queues:
will be modified to add tickets to a process if it has been sitting in queue for a predetermined amount of time

